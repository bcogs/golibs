name: Go CI

on:
  pull_request:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      test_dirs: ${{ steps.filter.outputs.test_dirs }}
      vet_files: ${{ steps.filter.outputs.vet_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get modified files
        id: filter
        run: |
          # Get modified Go files for vet
          vet_files=$(git diff --name-only origin/${{ github.base_ref }} -- '*.go' | jq -R -s -c 'split("\n")[:-1]')
          
          # Get unique directories for test
          test_dirs=$(git diff --name-only origin/${{ github.base_ref }} | xargs -n1 dirname | sort -u | jq -R -s -c 'split("\n")[:-1]')

          echo "vet_files=$vet_files" >> "$GITHUB_ENV"
          echo "test_dirs=$test_dirs" >> "$GITHUB_ENV"
          echo "::set-output name=vet_files::$vet_files"
          echo "::set-output name=test_dirs::$test_dirs"

  vet:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.vet_files != '[]' }}
    strategy:
      matrix:
        file: ${{ fromJson(needs.detect-changes.outputs.vet_files) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Run go vet
        run: go vet ${{ matrix.file }}

  test:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.test_dirs != '[]' }}
    strategy:
      matrix:
        dir: ${{ fromJson(needs.detect-changes.outputs.test_dirs) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Run go test
        run: go test -v ./...
        working-directory: ${{ matrix.dir }}
